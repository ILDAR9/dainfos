Start read graph
n = 1000000
Graph created
N = 1000000
E = 1.08439e+06
p = 2.16877e-06
THEOREM 1:
	n^(-1) << p <= n^(-5/6 - e) 	e = 0.001	[1/6 > e > 0]
	1e-06 << p <= 9.86279e-06 (OK)
pt = 1
ps = 1
r = 2
a_c = 106302: initial seed set.
------------------------------------
Generate G1
	generate subgraph
	V_count = 1000000
Generate G2
	generate subgraph
	V_count = 1000000
same = 1000000;  N * pt * pt = 1e+06
Noisy seeds are generated:
	before = 5; with generated = 10
Start percolation matching
M <- A_0 and Z <- A_0
while M \ Z != None do
[16265,16635] (12,40)
[16155,16716] (3,15)
[16006,16871] (12,6)
[15958,16922] (5,40)
[17028,15851] (6,32)
[17219,15682] (3,3)
[15734,17161] (29,34)
[15293,17617] (19,36)
[17704,15201] (17,33)
[15028,17859] (32,32)
[18024,14847] (20,11)
[18224,14655] (15,3)
[18298,14594] (38,34)
[14463,18420] (33,8)
[18524,14382] (15,15)
[14127,18777] (29,9)
[18856,14037] (19,6)
[18979,13917] (16,30)
[18959,13934] (6,4)
[13577,19335] (12,22)
[19440,13436] (33,8)
[19549,13354] (14,30)
[13150,19744] (3,19)
[19898,13004] (23,19)
[12866,20013] (20,10)
[12811,20080] (2,18)
[12561,20319] (28,12)
[20449,12439] (15,22)
[20552,12341] (9,21)
[12119,20774] (32,12)
[11997,20894] (9,4)
[20981,11904] (29,19)
[21131,11770] (10,25)
[11605,21297] (26,7)
[21443,11453] (30,31)
[21601,11282] (37,34)
[11155,21731] (30,2)
[11083,21810] (36,10)
[22095,10800] (27,8)
[10741,22158] (16,12)
[10648,22235] (6,13)
[22569,10330] (39,0)
[22758,10143] (4,31)
[22925,9989] (17,37)
[22976,9926] (0,9)
[9893,23000] (25,7)
[23337,9558] (25,21)
[9541,23344] (5,23)
[23579,9325] (22,42)
[23725,9171] (23,22)
[23778,9135] (9,26)
[24004,8908] (38,7)
[8795,24111] (30,12)
[24265,8646] (23,36)
[24314,8592] (27,36)
[24556,8347] (17,27)
[8238,24657] (3,17)
[8077,24815] (30,8)
[7914,24976] (21,8)
[25221,7677] (36,22)
[7634,25263] (7,5)
[7518,25385] (33,6)
[25655,7239] (10,36)
[7155,25733] (26,5)
[25930,6952] (22,1)
[6873,26008] (11,24)
[6760,26117] (19,10)
[26323,6570] (26,23)
[6460,26434] (16,33)
[6260,26628] (31,12)
[26750,6155] (35,31)
[26939,5958] (16,18)
[27076,5808] (3,31)
[5689,27205] (16,16)
[5519,27373] (1,33)
[27466,5436] (36,22)
[5204,27697] (33,33)
[27775,5125] (20,11)
[4988,27903] (11,22)
[28070,4833] (33,28)
[28189,4702] (9,19)
[28347,4544] (11,21)
[4341,28558] (37,38)
[4218,28690] (28,13)
[28827,4068] (7,40)
[29017,3885] (4,32)
[29160,3732] (2,2)
[29335,3574] (19,12)
[29429,3481] (16,7)
[29443,3437] (17,2)
[29768,3139] (35,18)
[29979,2931] (25,3)
[30140,2754] (30,25)
[2817,30081] (36,31)
[30405,2505] (9,22)
[2535,30358] (26,16)
[30700,2189] (31,19)
[30755,2139] (17,18)
[30932,1971] (29,1)
[1859,31040] (24,43)
[1790,31131] (7,30)
[31355,1545] (35,3)
[1485,31431] (21,24)
[1335,31564] (14,24)
[1172,31734] (11,27)
[32145,762] (4,27)
[32267,636] (7,2)
[764,32134] (28,1)
[32471,409] (11,4)
[32768,114] (21,20)
[304,32600] (4,10)
[98,32803] (14,16)
ExpandOnce: 
----------RESULT----------
ExpandWhenStuck results for N = 1000000; s = 1; nb_seed = 5
	common nodes count G1 and G2 = 1000000
	matched = 32896
	correct matches = 1	 wrong matches = 32895
	recall = 1e-06
	precision = 1e-06
	F1-score = 1e-06
	precision (correct+wrong) = 32896
	F1-score (correct+wrong) = 2e-06
