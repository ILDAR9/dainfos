Start read graph
n = 1000000
Graph created
N = 1000000
E = 9.9999e+06
p = 1.99998e-05
THEOREM 1:
	n^(-1) << p <= n^(-5/6 - e) 	e = 0.001	[1/6 > e > 0]
	1e-06 << p <= 9.86279e-06 (FALSE)
pt = 1
ps = 1
r = 2
a_c = 1250.02: initial seed set.
------------------------------------
Generate G1
	generate subgraph
	V_count = 1000000
Generate G2
	generate subgraph
	V_count = 1000000
same = 1000000;  N * pt * pt = 1e+06
Noisy seeds are generated:
	before = 2000; with generated = 2000
Start percolation matching
M <- A_0 and Z <- A_0
while M \ Z != None do
[858558,858558] (13,7)
[321221,321221] (21,21)
[473346,473346] (11,10)
[628585,628585] (13,1)
[592045,592045] (6,0)
[865540,865540] (31,22)
[918582,918582] (3,15)
[800315,800315] (0,18)
[859889,859889] (30,20)
[694796,694796] (19,12)
[177470,177470] (5,2)
[27284,27284] (4,15)
[684895,684895] (14,2)
[916521,916521] (18,18)
[399571,399571] (14,27)
[722384,722384] (22,26)
[241013,241013] (26,6)
[348148,348148] (2,7)
[704212,704212] (13,5)
[650364,650364] (1,7)
[311065,311065] (9,19)
[648085,648085] (19,16)
[911154,911154] (7,9)
[329029,329029] (12,15)
[861560,861560] (9,16)
[821226,821226] (7,16)
[363288,363288] (16,5)
[724329,724329] (11,16)
[848512,848512] (25,27)
[396011,396011] (5,14)
[131364,131364] (1,7)
[829682,829682] (15,17)
[528505,528505] (18,2)
[661761,661761] (0,9)
[797431,797431] (12,0)
[630372,630372] (4,16)
[532617,532617] (15,0)
[118251,118251] (0,2)
[762952,762952] (2,24)
[331929,331929] (4,7)
[372208,372208] (5,11)
[137600,137600] (1,8)
[442071,442071] (9,22)
[826233,826233] (11,7)
[693373,693373] (6,23)
[393420,393420] (17,3)
[194799,194799] (21,9)
[892650,892650] (17,13)
[598312,598312] (26,11)
[487254,487254] (12,6)
[1745,1745] (9,27)
[45295,45295] (8,4)
[142945,142945] (0,8)
[275152,275152] (0,3)
[714234,714234] (24,3)
[879462,879462] (9,19)
[301979,301979] (12,10)
[879821,879821] (11,17)
[108084,108084] (1,26)
[644121,644121] (15,4)
[711719,711719] (1,14)
[961911,961911] (12,3)
[497599,497599] (4,9)
[703724,703724] (11,22)
[72733,72733] (11,12)
[30806,30806] (23,24)
[312116,312116] (16,0)
[765720,765720] (3,8)
[412754,412754] (5,3)
[345795,345795] (12,12)
[453762,453762] (18,9)
[557227,557227] (8,2)
[115746,115746] (19,12)
[90843,90843] (19,13)
[487598,487598] (18,10)
[735820,735820] (23,14)
[953781,953781] (23,3)
[910239,910239] (8,15)
[375135,375135] (12,1)
[868313,868313] (0,15)
[46873,46873] (0,2)
[388191,388191] (6,17)
[139095,139095] (15,14)
[91295,91295] (20,10)
[217560,217560] (5,16)
[80753,80753] (6,19)
[868274,868274] (10,3)
[233251,233251] (9,2)
[892788,892788] (10,11)
[415431,415431] (14,4)
[759044,759044] (7,3)
[645533,645533] (3,21)
[637347,637347] (11,14)
[729743,729743] (10,13)
[260753,260753] (11,13)
[910,910] (24,24)
[536559,536559] (12,6)
[541858,541858] (19,17)
[77657,77657] (1,14)
[917927,917927] (16,15)
[981897,981897] (15,9)
[91072,91072] (2,0)
[17502,17502] (4,3)
[894334,894334] (1,12)
[180301,180301] (7,2)
[492142,492142] (12,3)
[702503,702503] (14,14)
[97735,97735] (18,21)
[234640,234640] (3,18)
[778730,778730] (0,9)
[724538,724538] (6,18)
[280950,280950] (9,20)
[394775,394775] (20,1)
[725953,725953] (5,2)
[820115,820115] (14,21)
[499078,499078] (22,9)
[161835,161835] (18,5)
[324311,324311] (8,21)
[551913,551913] (7,8)
[176533,176533] (3,18)
[351394,351394] (2,7)
[407026,407026] (10,9)
[637106,637106] (13,6)
[403380,403380] (18,18)
[57220,57220] (1,18)
[612456,612456] (0,4)
[19943,19943] (27,8)
[318516,318516] (8,5)
[83448,83448] (2,11)
[185796,185796] (8,11)
[891144,891144] (5,18)
[14939,14939] (9,11)
[370884,370884] (15,7)
[435588,435588] (16,11)
[388120,388120] (1,10)
[189294,189294] (14,7)
[702133,702133] (4,8)
[805215,805215] (4,9)
[994079,994079] (7,10)
[675967,675967] (12,10)
[252448,252448] (3,15)
[582283,582283] (13,10)
[693095,693095] (1,12)
[522981,522981] (12,10)
[228419,228419] (20,11)
[950663,950663] (5,22)
[894257,894257] (12,6)
[477700,477700] (7,0)
[208767,208767] (0,10)
[350307,350307] (1,17)
[840797,840797] (7,7)
[576658,576658] (3,9)
[54339,54339] (6,18)
[462536,462536] (5,13)
[140239,140239] (14,19)
[299902,299902] (6,5)
[356051,356051] (22,0)
[788939,788939] (8,0)
[247784,247784] (19,22)
[210512,210512] (12,0)
[770530,770530] (10,8)
[862496,862496] (6,9)
[236317,236317] (14,9)
[422574,422574] (11,2)
[521916,521916] (9,3)
[252081,252081] (19,3)
[27299,27299] (4,1)
[931254,931254] (11,2)
[341062,341062] (3,12)
[281401,281401] (0,3)
[304395,304395] (5,8)
[740810,740810] (3,0)
[451416,451416] (11,15)
[760716,760716] (10,0)
[493809,493809] (11,5)
ExpandWhenStuck: 
----------RESULT----------
ExpandWhenStuck results for N = 1000000; s = 1; nb_seed = 2000
	common nodes count G1 and G2 = 1000000
	matched = 1000000
	correct matches = 999938	 wrong matches = 62
	recall = 0.999938
	precision = 0.999938
	F1-score = 0.999938
	precision (correct+wrong) = 63
	F1-score (correct+wrong) = 1.96863
